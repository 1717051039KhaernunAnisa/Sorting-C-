
#include<iostream>
using namespace std;

	//selection sort
	void selsort(int a)
	{
		int tmp;
		for( int i = 0; i < 5; i++)
			cout << data[i] << " "; 
			cout << endl;
		for (int i = 0; i < 5 -1; i++)
		for (int j = i+1; j < 5; j++)
			if (data[i] > data[j])
				{
					tmp = data[i];
					data[i] = data[j];
					data[j] = tmp;
				}
		for( int i = 0; i < 5; i++)
		cout << data[i] << " "; 
	}
	
	//merge sort
	void mergeSort(int d[], int kiri, int tengah, int kanan){
    int m, n, e;
    int bsatu = tengah - kiri + 1;
    int bdua =  kanan - kiri;
    int Left[bsatu], Right[bdua];

// Salin data to temp_array Left[] dan Right[] //
    for (m = 0; m < bsatu; m++)
       	Left[m] = d[kiri + m];
    for (n = 0; n < bdua; n++)
        Right[n] = d[tengah + 1 + n];
 
    	m = 0; // subarray1 
		n = 0; // subarray2
    	e = kiri; // subarrayMerge
    
	while (m < bsatu && n < bdua){
        if (Left[m] <= Right[n]){
            d[e] = Left[m]; m++;
        }else{
            d[e] = Right[n]; n++;
        } e++;
    }
 
    while (m < bsatu){
        d[e] = Left[m];
        m++;
        e++;
    }
 
    while (n < bdua){
        d[e] = Right[n];
        n++;
        e++;
    }
}
 
void mergeSort(int d[], int kiri, int kanan){
    if (kiri < kanan){
        
		int tengah = kiri + (kanan - kiri) / 2;
 		mergeSort(d, kiri, tengah);
        mergeSort(d, tengah + 1, kanan);
        mergeSort(d, kiri, tengah, kanan);
    }
}
 
void cetak(int U[], int size){
    int m;
    for (m=0; m < size; m++)
        cout<<"\t"<<U[m];
    cout<<endl<<endl;
}

int main()
{
	int a;
	
	cout<<"================================================="<<endl;
	cout<<"Program Sorting pada C++\n";
	cout<<"Meria Nensi/1717051015\n";
	cout<<"Alya Rani Vidya Larasati/1717051023\n";
	cout<<"Khaernun Anisa Ensri/1717051039\n";
	cout<<"================================================="<<endl;
	cout<<"\n";
	cout<<"1. Selection Sort\n";
				int data [7] = { 7, 3, 9, 2, 5};
	cout<<"2. Bubble Sort\n";
	cout<<"3. Merge Sort\n";
				int d[] = {30, 21, 1, 10, 11};
    			int d_size = sizeof(d)/sizeof(d[0]);
			 	cout<<"------------------------------"<<endl;
				cout<<"Misal Data yang diberikan : \n";
			    cetak(d, d_size);
			    mergeSort(d, 0, d_size - 1);
			 	cout<<"----------------------------"<<endl;
				cout<<"Hasil Merge Sort adalah : \n";
				cetak(d, d_size);
	
			}
	}
	return 0;
}
